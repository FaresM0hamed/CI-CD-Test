name: Novix CI Pipeline

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Decode and recreate google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Create secrets.properties file
        run: |
          echo "API_KEY=\"${{ secrets.API_KEY }}\"" > app/secrets.properties

      - name: Decode keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Set environment variables for signing
        run: |
          echo "RELEASE_KEYSTORE_PASSWORD=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Clean Project
        run: ./gradlew clean

      - name: Compile Project
        run: ./gradlew assemble

      - name: Run Unit Tests
        run: ./gradlew test

#      - name: Generate JaCoCo Test Report
#        run: ./gradlew jacocoTestReport
#
#      - name: Verify JaCoCo Coverage
#        run: ./gradlew jacocoTestCoverageVerification
#
#      - name: Upload JaCoCo HTML Report
#        uses: actions/upload-artifact@v4
#        with:
#          name: jacoco-html
#          path: build/reports/jacoco/test/html
#
#      - name: Comment on coverage for current branch
#        if: github.event_name == 'pull_request' && github.base_ref == 'develop'
#        uses: madrapps/jacoco-report@v1.7.1
#        with:
#          paths: |
#            build/reports/jacoco/test/jacocoTestReport.xml
#          token: ${{ secrets.GITHUB_TOKEN }}
#          min-coverage-overall: 80
#          min-coverage-changed-files: 80
#          update-comment: true
#          title: "üõ°Ô∏è Code Coverage Report"
#          check-for-current-branch: true
#          coverage-counter-type: LINE,INSTRUCTION,BRANCH,METHOD,CLASS
#          include-all-sources: true
#          debug-mode: true
#          fail-if-coverage-less: true
#          fail-on-coverage-violation: true
#          failure-message: "Code coverage is currently at {coverage}%. Target is 100%."
#          success-message: "‚úÖ Code coverage is at {coverage}%."
#          report-on-status: true
